#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UM.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYKHOA")]
	public partial class EDUCATIONDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGIANGVIEN(GIANGVIEN instance);
    partial void UpdateGIANGVIEN(GIANGVIEN instance);
    partial void DeleteGIANGVIEN(GIANGVIEN instance);
    partial void InsertGVKHOA(GVKHOA instance);
    partial void UpdateGVKHOA(GVKHOA instance);
    partial void DeleteGVKHOA(GVKHOA instance);
    partial void InsertHOCKY(HOCKY instance);
    partial void UpdateHOCKY(HOCKY instance);
    partial void DeleteHOCKY(HOCKY instance);
    partial void InsertLoginGV(LoginGV instance);
    partial void UpdateLoginGV(LoginGV instance);
    partial void DeleteLoginGV(LoginGV instance);
    partial void InsertLoginGVK(LoginGVK instance);
    partial void UpdateLoginGVK(LoginGVK instance);
    partial void DeleteLoginGVK(LoginGVK instance);
    partial void InsertLOPHOC(LOPHOC instance);
    partial void UpdateLOPHOC(LOPHOC instance);
    partial void DeleteLOPHOC(LOPHOC instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    #endregion
		
		public EDUCATIONDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QUANLYKHOAConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EDUCATIONDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EDUCATIONDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EDUCATIONDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EDUCATIONDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<GVKHOA> GVKHOAs
		{
			get
			{
				return this.GetTable<GVKHOA>();
			}
		}
		
		public System.Data.Linq.Table<HOCKY> HOCKies
		{
			get
			{
				return this.GetTable<HOCKY>();
			}
		}
		
		public System.Data.Linq.Table<LoginGV> LoginGVs
		{
			get
			{
				return this.GetTable<LoginGV>();
			}
		}
		
		public System.Data.Linq.Table<LoginGVK> LoginGVKs
		{
			get
			{
				return this.GetTable<LoginGVK>();
			}
		}
		
		public System.Data.Linq.Table<LOPHOC> LOPHOCs
		{
			get
			{
				return this.GetTable<LOPHOC>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _HotenGV;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private string _Dienthoai;
		
		private string _Diachi;
		
		private string _Gmail;
		
		private string _MaMH;
		
		private string _MaLH;
		
		private EntitySet<LoginGV> _LoginGVs;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnHotenGVChanging(string value);
    partial void OnHotenGVChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnGmailChanging(string value);
    partial void OnGmailChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    #endregion
		
		public GIANGVIEN()
		{
			this._LoginGVs = new EntitySet<LoginGV>(new Action<LoginGV>(this.attach_LoginGVs), new Action<LoginGV>(this.detach_LoginGVs));
			this._LOPHOC = default(EntityRef<LOPHOC>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotenGV", DbType="NVarChar(50)")]
		public string HotenGV
		{
			get
			{
				return this._HotenGV;
			}
			set
			{
				if ((this._HotenGV != value))
				{
					this.OnHotenGVChanging(value);
					this.SendPropertyChanging();
					this._HotenGV = value;
					this.SendPropertyChanged("HotenGV");
					this.OnHotenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="Char(10)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(150)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gmail", DbType="NVarChar(50)")]
		public string Gmail
		{
			get
			{
				return this._Gmail;
			}
			set
			{
				if ((this._Gmail != value))
				{
					this.OnGmailChanging(value);
					this.SendPropertyChanging();
					this._Gmail = value;
					this.SendPropertyChanged("Gmail");
					this.OnGmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Char(10)")]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="Char(10)")]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LoginGV", Storage="_LoginGVs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<LoginGV> LoginGVs
		{
			get
			{
				return this._LoginGVs;
			}
			set
			{
				this._LoginGVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_GIANGVIEN", Storage="_LOPHOC", ThisKey="MaLH", OtherKey="MaLH", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.GIANGVIENs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.GIANGVIENs.Add(this);
						this._MaLH = value.MaLH;
					}
					else
					{
						this._MaLH = default(string);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIANGVIEN", Storage="_MONHOC", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIANGVIENs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIANGVIENs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoginGVs(LoginGV entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_LoginGVs(LoginGV entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GVKHOA")]
	public partial class GVKHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGVK;
		
		private string _HotenGVK;
		
		private System.Nullable<System.DateTime> _Ngaysinh;
		
		private string _Dienthoai;
		
		private string _Diachi;
		
		private string _Gmail;
		
		private string _MaLH;
		
		private EntitySet<LoginGVK> _LoginGVKs;
		
		private EntitySet<TINTUC> _TINTUCs;
		
		private EntityRef<LOPHOC> _LOPHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVKChanging(string value);
    partial void OnMaGVKChanged();
    partial void OnHotenGVKChanging(string value);
    partial void OnHotenGVKChanged();
    partial void OnNgaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaysinhChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnGmailChanging(string value);
    partial void OnGmailChanged();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    #endregion
		
		public GVKHOA()
		{
			this._LoginGVKs = new EntitySet<LoginGVK>(new Action<LoginGVK>(this.attach_LoginGVKs), new Action<LoginGVK>(this.detach_LoginGVKs));
			this._TINTUCs = new EntitySet<TINTUC>(new Action<TINTUC>(this.attach_TINTUCs), new Action<TINTUC>(this.detach_TINTUCs));
			this._LOPHOC = default(EntityRef<LOPHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVK", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGVK
		{
			get
			{
				return this._MaGVK;
			}
			set
			{
				if ((this._MaGVK != value))
				{
					this.OnMaGVKChanging(value);
					this.SendPropertyChanging();
					this._MaGVK = value;
					this.SendPropertyChanged("MaGVK");
					this.OnMaGVKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotenGVK", DbType="NVarChar(50)")]
		public string HotenGVK
		{
			get
			{
				return this._HotenGVK;
			}
			set
			{
				if ((this._HotenGVK != value))
				{
					this.OnHotenGVKChanging(value);
					this.SendPropertyChanging();
					this._HotenGVK = value;
					this.SendPropertyChanged("HotenGVK");
					this.OnHotenGVKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="Char(10)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(150)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gmail", DbType="NVarChar(50)")]
		public string Gmail
		{
			get
			{
				return this._Gmail;
			}
			set
			{
				if ((this._Gmail != value))
				{
					this.OnGmailChanging(value);
					this.SendPropertyChanging();
					this._Gmail = value;
					this.SendPropertyChanged("Gmail");
					this.OnGmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="Char(10)")]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					if (this._LOPHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GVKHOA_LoginGVK", Storage="_LoginGVKs", ThisKey="MaGVK", OtherKey="MaGVK")]
		public EntitySet<LoginGVK> LoginGVKs
		{
			get
			{
				return this._LoginGVKs;
			}
			set
			{
				this._LoginGVKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GVKHOA_TINTUC", Storage="_TINTUCs", ThisKey="MaGVK", OtherKey="MaGVK")]
		public EntitySet<TINTUC> TINTUCs
		{
			get
			{
				return this._TINTUCs;
			}
			set
			{
				this._TINTUCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_GVKHOA", Storage="_LOPHOC", ThisKey="MaLH", OtherKey="MaLH", IsForeignKey=true)]
		public LOPHOC LOPHOC
		{
			get
			{
				return this._LOPHOC.Entity;
			}
			set
			{
				LOPHOC previousValue = this._LOPHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOC.Entity = null;
						previousValue.GVKHOAs.Remove(this);
					}
					this._LOPHOC.Entity = value;
					if ((value != null))
					{
						value.GVKHOAs.Add(this);
						this._MaLH = value.MaLH;
					}
					else
					{
						this._MaLH = default(string);
					}
					this.SendPropertyChanged("LOPHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoginGVKs(LoginGVK entity)
		{
			this.SendPropertyChanging();
			entity.GVKHOA = this;
		}
		
		private void detach_LoginGVKs(LoginGVK entity)
		{
			this.SendPropertyChanging();
			entity.GVKHOA = null;
		}
		
		private void attach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.GVKHOA = this;
		}
		
		private void detach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.GVKHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCKY")]
	public partial class HOCKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHK;
		
		private string _TenHK;
		
		private System.Nullable<int> _Tinchi;
		
		private System.Nullable<int> _Sotiet;
		
		private EntitySet<MONHOC> _MONHOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    partial void OnTenHKChanging(string value);
    partial void OnTenHKChanged();
    partial void OnTinchiChanging(System.Nullable<int> value);
    partial void OnTinchiChanged();
    partial void OnSotietChanging(System.Nullable<int> value);
    partial void OnSotietChanged();
    #endregion
		
		public HOCKY()
		{
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHK", DbType="NVarChar(100)")]
		public string TenHK
		{
			get
			{
				return this._TenHK;
			}
			set
			{
				if ((this._TenHK != value))
				{
					this.OnTenHKChanging(value);
					this.SendPropertyChanging();
					this._TenHK = value;
					this.SendPropertyChanged("TenHK");
					this.OnTenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinchi", DbType="Int")]
		public System.Nullable<int> Tinchi
		{
			get
			{
				return this._Tinchi;
			}
			set
			{
				if ((this._Tinchi != value))
				{
					this.OnTinchiChanging(value);
					this.SendPropertyChanging();
					this._Tinchi = value;
					this.SendPropertyChanged("Tinchi");
					this.OnTinchiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sotiet", DbType="Int")]
		public System.Nullable<int> Sotiet
		{
			get
			{
				return this._Sotiet;
			}
			set
			{
				if ((this._Sotiet != value))
				{
					this.OnSotietChanging(value);
					this.SendPropertyChanging();
					this._Sotiet = value;
					this.SendPropertyChanged("Sotiet");
					this.OnSotietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_MONHOC", Storage="_MONHOCs", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginGV")]
	public partial class LoginGV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLogin;
		
		private string _MaGV;
		
		private string _Password;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoginChanging(string value);
    partial void OnMaLoginChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public LoginGV()
		{
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLogin", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLogin
		{
			get
			{
				return this._MaLogin;
			}
			set
			{
				if ((this._MaLogin != value))
				{
					this.OnMaLoginChanging(value);
					this.SendPropertyChanging();
					this._MaLogin = value;
					this.SendPropertyChanged("MaLogin");
					this.OnMaLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LoginGV", Storage="_GIANGVIEN", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.LoginGVs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.LoginGVs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginGVK")]
	public partial class LoginGVK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLogin;
		
		private string _MaGVK;
		
		private string _Password;
		
		private EntityRef<GVKHOA> _GVKHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoginChanging(string value);
    partial void OnMaLoginChanged();
    partial void OnMaGVKChanging(string value);
    partial void OnMaGVKChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public LoginGVK()
		{
			this._GVKHOA = default(EntityRef<GVKHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLogin", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLogin
		{
			get
			{
				return this._MaLogin;
			}
			set
			{
				if ((this._MaLogin != value))
				{
					this.OnMaLoginChanging(value);
					this.SendPropertyChanging();
					this._MaLogin = value;
					this.SendPropertyChanged("MaLogin");
					this.OnMaLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVK", DbType="Char(10)")]
		public string MaGVK
		{
			get
			{
				return this._MaGVK;
			}
			set
			{
				if ((this._MaGVK != value))
				{
					if (this._GVKHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVKChanging(value);
					this.SendPropertyChanging();
					this._MaGVK = value;
					this.SendPropertyChanged("MaGVK");
					this.OnMaGVKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GVKHOA_LoginGVK", Storage="_GVKHOA", ThisKey="MaGVK", OtherKey="MaGVK", IsForeignKey=true)]
		public GVKHOA GVKHOA
		{
			get
			{
				return this._GVKHOA.Entity;
			}
			set
			{
				GVKHOA previousValue = this._GVKHOA.Entity;
				if (((previousValue != value) 
							|| (this._GVKHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GVKHOA.Entity = null;
						previousValue.LoginGVKs.Remove(this);
					}
					this._GVKHOA.Entity = value;
					if ((value != null))
					{
						value.LoginGVKs.Add(this);
						this._MaGVK = value.MaGVK;
					}
					else
					{
						this._MaGVK = default(string);
					}
					this.SendPropertyChanged("GVKHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPHOC")]
	public partial class LOPHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLH;
		
		private string _TenLH;
		
		private EntitySet<GIANGVIEN> _GIANGVIENs;
		
		private EntitySet<GVKHOA> _GVKHOAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    partial void OnTenLHChanging(string value);
    partial void OnTenLHChanged();
    #endregion
		
		public LOPHOC()
		{
			this._GIANGVIENs = new EntitySet<GIANGVIEN>(new Action<GIANGVIEN>(this.attach_GIANGVIENs), new Action<GIANGVIEN>(this.detach_GIANGVIENs));
			this._GVKHOAs = new EntitySet<GVKHOA>(new Action<GVKHOA>(this.attach_GVKHOAs), new Action<GVKHOA>(this.detach_GVKHOAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLH", DbType="NVarChar(50)")]
		public string TenLH
		{
			get
			{
				return this._TenLH;
			}
			set
			{
				if ((this._TenLH != value))
				{
					this.OnTenLHChanging(value);
					this.SendPropertyChanging();
					this._TenLH = value;
					this.SendPropertyChanged("TenLH");
					this.OnTenLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_GIANGVIEN", Storage="_GIANGVIENs", ThisKey="MaLH", OtherKey="MaLH")]
		public EntitySet<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this._GIANGVIENs;
			}
			set
			{
				this._GIANGVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOC_GVKHOA", Storage="_GVKHOAs", ThisKey="MaLH", OtherKey="MaLH")]
		public EntitySet<GVKHOA> GVKHOAs
		{
			get
			{
				return this._GVKHOAs;
			}
			set
			{
				this._GVKHOAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
		
		private void attach_GVKHOAs(GVKHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = this;
		}
		
		private void detach_GVKHOAs(GVKHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private System.Nullable<int> _Tinchi;
		
		private System.Nullable<int> _Sotiet;
		
		private string _MaHK;
		
		private EntitySet<GIANGVIEN> _GIANGVIENs;
		
		private EntityRef<HOCKY> _HOCKY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnTinchiChanging(System.Nullable<int> value);
    partial void OnTinchiChanged();
    partial void OnSotietChanging(System.Nullable<int> value);
    partial void OnSotietChanged();
    partial void OnMaHKChanging(string value);
    partial void OnMaHKChanged();
    #endregion
		
		public MONHOC()
		{
			this._GIANGVIENs = new EntitySet<GIANGVIEN>(new Action<GIANGVIEN>(this.attach_GIANGVIENs), new Action<GIANGVIEN>(this.detach_GIANGVIENs));
			this._HOCKY = default(EntityRef<HOCKY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(100)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinchi", DbType="Int")]
		public System.Nullable<int> Tinchi
		{
			get
			{
				return this._Tinchi;
			}
			set
			{
				if ((this._Tinchi != value))
				{
					this.OnTinchiChanging(value);
					this.SendPropertyChanging();
					this._Tinchi = value;
					this.SendPropertyChanged("Tinchi");
					this.OnTinchiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sotiet", DbType="Int")]
		public System.Nullable<int> Sotiet
		{
			get
			{
				return this._Sotiet;
			}
			set
			{
				if ((this._Sotiet != value))
				{
					this.OnSotietChanging(value);
					this.SendPropertyChanging();
					this._Sotiet = value;
					this.SendPropertyChanged("Sotiet");
					this.OnSotietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="Char(10)")]
		public string MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HOCKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIANGVIEN", Storage="_GIANGVIENs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this._GIANGVIENs;
			}
			set
			{
				this._GIANGVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_MONHOC", Storage="_HOCKY", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HOCKY HOCKY
		{
			get
			{
				return this._HOCKY.Entity;
			}
			set
			{
				HOCKY previousValue = this._HOCKY.Entity;
				if (((previousValue != value) 
							|| (this._HOCKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKY.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._HOCKY.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(string);
					}
					this.SendPropertyChanged("HOCKY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTT;
		
		private string _Tieude;
		
		private System.Nullable<System.DateTime> _Ngaydang;
		
		private string _MaGVK;
		
		private EntityRef<GVKHOA> _GVKHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    partial void OnTieudeChanging(string value);
    partial void OnTieudeChanged();
    partial void OnNgaydangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydangChanged();
    partial void OnMaGVKChanging(string value);
    partial void OnMaGVKChanged();
    #endregion
		
		public TINTUC()
		{
			this._GVKHOA = default(EntityRef<GVKHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieude", DbType="NVarChar(50)")]
		public string Tieude
		{
			get
			{
				return this._Tieude;
			}
			set
			{
				if ((this._Tieude != value))
				{
					this.OnTieudeChanging(value);
					this.SendPropertyChanging();
					this._Tieude = value;
					this.SendPropertyChanged("Tieude");
					this.OnTieudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydang", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Ngaydang
		{
			get
			{
				return this._Ngaydang;
			}
			set
			{
				if ((this._Ngaydang != value))
				{
					this.OnNgaydangChanging(value);
					this.SendPropertyChanging();
					this._Ngaydang = value;
					this.SendPropertyChanged("Ngaydang");
					this.OnNgaydangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGVK", DbType="Char(10)")]
		public string MaGVK
		{
			get
			{
				return this._MaGVK;
			}
			set
			{
				if ((this._MaGVK != value))
				{
					if (this._GVKHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVKChanging(value);
					this.SendPropertyChanging();
					this._MaGVK = value;
					this.SendPropertyChanged("MaGVK");
					this.OnMaGVKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GVKHOA_TINTUC", Storage="_GVKHOA", ThisKey="MaGVK", OtherKey="MaGVK", IsForeignKey=true)]
		public GVKHOA GVKHOA
		{
			get
			{
				return this._GVKHOA.Entity;
			}
			set
			{
				GVKHOA previousValue = this._GVKHOA.Entity;
				if (((previousValue != value) 
							|| (this._GVKHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GVKHOA.Entity = null;
						previousValue.TINTUCs.Remove(this);
					}
					this._GVKHOA.Entity = value;
					if ((value != null))
					{
						value.TINTUCs.Add(this);
						this._MaGVK = value.MaGVK;
					}
					else
					{
						this._MaGVK = default(string);
					}
					this.SendPropertyChanged("GVKHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
